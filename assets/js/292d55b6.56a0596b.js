(self.webpackChunkrne_website=self.webpackChunkrne_website||[]).push([[33555],{70087:(t,e,n)=>{"use strict";n.d(e,{Z:()=>d});var a=n(67294),l=n(13925),r=n(54236),o=n(40318),i=n(62290);const d=function(){var t=(0,o.Z)({componentName:"ButtonGroup",props:{buttonStyle:{type:i.n.Object,value:"{width:100}"},buttonContainerStyle:{type:i.n.Object,value:"{}"},buttons:{type:i.n.Array,value:"['Hello', 'World', 'React',\"Native\",\"Elements\"]"},Component:{type:i.n.ReactNode,description:"React Native Component\tTouchableOpacity (ios) or TouchableNativeFeedback (android)",value:null},containerStyle:{type:i.n.Object,value:"{}"},disabled:{type:i.n.Array,description:"boolean OR number[]. Controls if buttons are disabled. Setting true makes all of them disabled, while using an array only makes those indices disabled.",value:"[3,4]"},disabledStyle:{type:i.n.Object,value:"{}"},disabledTextStyle:{type:i.n.Object,value:"{}"},disabledSelectedStyle:{type:i.n.Object,value:"{}"},disabledSelectedTextStyle:{type:i.n.Object,value:"{}"},innerBorderStyle:{type:i.n.Object,value:"{}"},onPress:{type:i.n.Function,value:"(selectedIdx) => setSelectedIndex(selectedIdx)",propHook:{what:"selectedIdx",into:"selectedIndex"}},selectMultiple:{type:i.n.Boolean,value:!1},selectedButtonStyle:{type:i.n.Object,value:"{}"},selectedIndex:{type:i.n.Number,value:"1",stateful:!0},selectedIndexes:{type:i.n.Array,value:"[]",stateful:!0},selectedTextStyle:{type:i.n.Object,value:"{}"},textStyle:{type:i.n.Object,value:"{}"},underlayColor:{type:i.n.String,value:null},vertical:{type:i.n.Boolean,value:!1}},scope:{ButtonGroup:l.ButtonGroup},imports:{"@rneui/base":{named:["ButtonGroup"]}}});return a.createElement(a.Fragment,null,a.createElement(r.Z,{params:t}))}},37047:(t,e,n)=>{"use strict";n.d(e,{w:()=>d});var a=n(67294),l=n(35742),r=n(14330),o=n(98576),i=n(61720),d=function(){return a.createElement(l.Z,null,a.createElement("style",{type:"text/css"},"\n          @font-face {\n            font-family: 'MaterialIcons';\n            src: url("+o.Z+") format('truetype');\n          }\n          @font-face {\n            font-family: 'FontAwesome';\n            src: url("+i.Z+") format('truetype');\n          }\n          @font-face {\n            font-family: 'MaterialCommunityIcons';\n            src: url("+r.Z+") format('truetype');\n          }\n        "))}},54236:(t,e,n)=>{"use strict";n.d(e,{Z:()=>c});var a=n(87462),l=n(67294),r=n(91262),o=n(18421),i=n(77356),d=n(41652),u=n(24309),p=n(16042),s=n(20346),m=n(30650);const c=function(t){var e=t.params,n=t.containerStyle,c=void 0===n?{}:n;return l.createElement(r.Z,{fallback:l.createElement(l.Fragment,null,"Loading...")},(function(){return l.createElement(s.X9.Provider,null,l.createElement(s.PK,{initialMetrics:m.o},l.createElement("div",{style:Object.assign({border:"1px solid var(--ifm-color-emphasis-200)",borderRadius:"var(--ifm-global-radius)",position:"relative"},c)},l.createElement(o.Z,(0,a.Z)({},e.compilerProps,{minHeight:62,placeholder:i.Z}))),l.createElement(d.Z,{msg:e.errorProps.msg,isPopup:!0}),l.createElement(u.Z,e.knobProps),l.createElement(d.Z,e.errorProps),l.createElement(p.E,e.actions)))}))}},22365:(t,e,n)=>{"use strict";n.d(e,{Z:()=>S});var a=n(63366),l=n(87462),r=n(67294),o=n(10407),i=n(86010),d=(n(95999),n(52263)),u=n(91262),p=n(66412);const s="playgroundContainer_TGbA",m="playgroundEditor_PvJ1",c="playgroundPreview_bb8I",k="toggleContainer_ZZiH",g="toggleIcon_OnrQ",N="showCode_O0Od";var y=n(72389),b=n(5434),h=["children","transformCode"];function f(){return r.createElement("div",null,"Loading...")}function C(t){var e=(0,y.Z)(),n=(0,r.useContext)(o.L2),a=n.code,i=n.language,d=n.theme,u=n.disabled,p=n.onChange;return r.createElement(o.uz,(0,l.Z)({key:String(e),code:a,language:i,theme:d,disabled:u,onChange:p},t,{className:m}))}function v(t){var e=t.showCode,n=t.preImports,a=void 0===n?"":n,l=(t.wrapper,r.useState(e)),d=l[0],p=l[1],s=function(){p((function(t){return!t}))};return r.createElement(r.Fragment,null,r.createElement("div",{className:c},r.createElement(u.Z,{fallback:r.createElement(f,null)},(function(){return r.createElement(r.Fragment,null,r.createElement(o.i5,null),r.createElement(o.IF,null),r.createElement("div",{className:k},r.createElement("div",{className:(0,i.Z)(g),onClick:s},r.createElement(b.xoN,null),r.createElement("span",{className:N},d?"Hide":"Show"," Code"))))}))),d&&r.createElement(C,{preImports:a,showCode:d}))}function S(t){var e=t.children,n=(t.transformCode,(0,a.Z)(t,h)),i=((0,d.Z)().siteConfig.themeConfig.liveCodeBlock.playgroundPosition,(0,p.p)());return r.createElement("div",{className:s},r.createElement(o.nu,(0,l.Z)({code:e.replace(/\n$/,""),theme:i},n),r.createElement(v,{showCode:n.showCode})))}},56922:(t,e,n)=>{"use strict";n.d(e,{Z:()=>d});var a=n(67294),l=n(32408),r=n(13925),o=n(53211),i=n(83279);const d=Object.assign({React:a,LinearGradient:i.Z},l,r,o,a)},49335:(t,e,n)=>{"use strict";n.r(e),n.d(e,{assets:()=>y,contentTitle:()=>g,default:()=>f,frontMatter:()=>k,metadata:()=>N,toc:()=>b});var a=n(87462),l=n(63366),r=(n(67294),n(3905)),o=n(37047),i=(n(74866),n(85162),n(96711)),d=n(47516),u=["components"],p={toc:[]};function s(t){var e=t.components,n=(0,l.Z)(t,u);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("div",{className:"snack-player","data-snack-name":"RNE ButtonGroup","data-snack-description":"Example usage","data-snack-code":"import%20React%2C%20%7BuseState%7D%20from%20'react'%0Aimport%20%7B%20ButtonGroup%20%7D%20from%20'%40rneui%2Fthemed'%0Aimport%20%7B%20Text%2C%20StyleSheet%20%7D%20from%20'react-native'%3B%0A%0Aexport%20default()%20%3D%3E%20%7B%0Aconst%20%5BselectedIndex%2C%20setSelectedIndex%5D%20%3D%20useState(0)%3B%0Aconst%20%5BselectedIndexes%2C%20setSelectedIndexes%5D%20%3D%20useState(%5B0%2C%202%2C%203%5D)%3B%0Areturn%20(%0A%20%20%3C%3E%0A%20%20%20%20%3CText%20style%3D%7Bstyles.subHeader%7D%3EUsing%20Strings%3C%2FText%3E%0A%20%20%20%20%3CButtonGroup%0A%20%20%20%20%20%20buttons%3D%7B%5B'SIMPLE'%2C%20'BUTTON'%2C%20'GROUP'%5D%7D%0A%20%20%20%20%20%20selectedIndex%3D%7BselectedIndex%7D%0A%20%20%20%20%20%20onPress%3D%7B(value)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20setSelectedIndex(value)%3B%0A%20%20%20%20%20%20%7D%7D%0A%20%20%20%20%20%20containerStyle%3D%7B%7B%20marginBottom%3A%2020%20%7D%7D%0A%20%20%20%20%2F%3E%0A%20%20%20%20%3CButtonGroup%0A%20%20%20%20%20%20buttons%3D%7B%5B'Multiple'%2C%20'Select'%2C%20'Button'%2C%20'Group'%5D%7D%0A%20%20%20%20%20%20selectMultiple%0A%20%20%20%20%20%20selectedIndexes%3D%7BselectedIndexes%7D%0A%20%20%20%20%20%20onPress%3D%7B(value)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20setSelectedIndexes(value)%3B%0A%20%20%20%20%20%20%7D%7D%0A%20%20%20%20%20%20containerStyle%3D%7B%7B%20marginBottom%3A%2020%20%7D%7D%0A%20%20%20%20%2F%3E%0A%20%20%20%20%3CText%20style%3D%7Bstyles.subHeader%7D%3EUsing%20Components%3C%2FText%3E%0A%20%20%3C%2F%3E%0A)%0A%7D%0A%0Aconst%20styles%20%3D%20StyleSheet.create(%7B%0AsubHeader%3A%20%7B%0A%20%20backgroundColor%20%3A%20%22%232089dc%22%2C%0A%20%20color%20%3A%20%22white%22%2C%0A%20%20textAlign%20%3A%20%22center%22%2C%0A%20%20paddingVertical%20%3A%205%2C%0A%20%20marginBottom%20%3A%2010%0A%7D%0A%7D)","data-snack-dependencies":"@rneui/themed,@rneui/base","data-snack-platform":"web","data-snack-supported-platforms":"ios,android,web","data-snack-theme":"light","data-snack-preview":"true","data-snack-loading":"lazy"}))}s.isMDXComponent=!0;var m=n(70087),c=["components"],k={id:"buttongroup",title:"ButtonGroup"},g=void 0,N={unversionedId:"components/buttongroup",id:"version-4.0.0-rc.8/components/buttongroup",title:"ButtonGroup",description:"ButtonGroup is a linear set of segments, each of which function as a button that can display a different view/or perform a different action. Use a ButtonGroup to offer choices that are closely related but mutually exclusive. This component inherits all native TouchableHighlight and TouchableOpacity props that come with React Native TouchableHighlight or TouchableOpacity elements.",source:"@site/versioned_docs/version-4.0.0-rc.8/components/ButtonGroup.mdx",sourceDirName:"components",slug:"/components/buttongroup",permalink:"/docs/components/buttongroup",draft:!1,editUrl:"https://github.com/react-native-elements/react-native-elements/edit/next/website/versioned_docs/version-4.0.0-rc.8/components/ButtonGroup.mdx",tags:[],version:"4.0.0-rc.8",frontMatter:{id:"buttongroup",title:"ButtonGroup"},sidebar:"docs",previous:{title:"Button",permalink:"/docs/components/button"},next:{title:"Card",permalink:"/docs/components/card"}},y={},b=[{value:"Usage",id:"usage",level:2},{value:"Icon",id:"icon",level:3},{value:"Multi Select",id:"multi-select",level:3},{value:"Props",id:"props",level:2},{value:"Playground",id:"playground",level:2}],h={toc:b};function f(t){var e=t.components,n=(0,l.Z)(t,c);return(0,r.kt)("wrapper",(0,a.Z)({},h,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)(o.w,{mdxType:"IconsStyle"}),(0,r.kt)("p",null,"ButtonGroup is a linear set of segments, each of which function as a button that can display a different view/or perform a different action. Use a ButtonGroup to offer choices that are closely related but mutually exclusive. This component inherits ",(0,r.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/touchablehighlight.html"},"all native TouchableHighlight and TouchableOpacity props that come with React Native TouchableHighlight or TouchableOpacity elements"),"."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("div",{class:"row inline-flex-center"},(0,r.kt)("div",{class:"col col--3"},(0,r.kt)("h4",null,"Import")),(0,r.kt)("div",{class:"col col--9"},(0,r.kt)(i.Z,{mdxType:"CodeBlock"},"import { ButtonGroup } from '@rneui/themed';")),(0,r.kt)("div",{class:"col col--3"},(0,r.kt)("h4",null,"Theme Key"," ",(0,r.kt)("a",{href:"../customizing#using-themeprovider"},(0,r.kt)(d.Fs0,{mdxType:"BiInfoCircle"})))),(0,r.kt)("div",{class:"col col--9"},(0,r.kt)(i.Z,{mdxType:"CodeBlock"},"ButtonGroup"))),(0,r.kt)("h3",{id:"icon"},"Icon"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},'function () {\n     const [selectedIndex, setSelectedIndex] = React.useState(0);\n     return (\n       <ButtonGroup\n         buttonStyle={{ padding: 10 }}\n         selectedButtonStyle={{ backgroundColor: \'#e2e2e2\' }}\n         buttons={[\n           <Icon name="format-align-left" />,\n           <Icon name="format-align-center" />,\n           <Icon name="format-align-right" />,\n         ]}\n         selectedIndex={selectedIndex}\n         onPress={setSelectedIndex}\n       />\n     );\n   }\n')),(0,r.kt)("h3",{id:"multi-select"},"Multi Select"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},'function () {\n     const [selectedIndex, setSelectedIndex] = React.useState([]);\n     return (\n       <ButtonGroup\n         selectMultiple\n         buttonStyle={{ padding: 10 }}\n         selectedButtonStyle={{ backgroundColor: \'#e2e2e2\' }}\n         buttons={[\n           <Icon name="format-bold" />,\n           <Icon name="format-italic" />,\n           <Icon name="format-underline" />,\n         ]}\n         selectedIndexes={selectedIndex}\n         onPress={setSelectedIndex}\n       />\n     );\n   }\n')),(0,r.kt)(s,{mdxType:"Usage"}),(0,r.kt)("h2",{id:"props"},"Props"),(0,r.kt)("div",{class:"table-responsive"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Component")),(0,r.kt)("td",{parentName:"tr",align:null},"React Component"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Choose other button component such as TouchableOpacity.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"activeOpacity")),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Add active opacity to the button in buttonGroup.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"button")),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Button for the component.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"buttonContainerStyle")),(0,r.kt)("td",{parentName:"tr",align:null},"View Style"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Specify styling for button containers.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"buttonStyle")),(0,r.kt)("td",{parentName:"tr",align:null},"View Style"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Specify styling for button.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"buttons")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"(string")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"ButtonComponent")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"ButtonObject)[]")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Array of buttons for component (required), if returning a component, must be an object with { element: componentName }.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"containerStyle")),(0,r.kt)("td",{parentName:"tr",align:null},"View Style"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Specify styling for main button container.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"disabled")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"number[]")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"Controls if buttons are disabled. Setting ",(0,r.kt)("inlineCode",{parentName:"td"},"true")," makes all of them disabled, while using an array only makes those indices disabled.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"disabledSelectedStyle")),(0,r.kt)("td",{parentName:"tr",align:null},"View Style"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Styling for each selected button when disabled.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"disabledSelectedTextStyle")),(0,r.kt)("td",{parentName:"tr",align:null},"Text Style"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Styling for the text of each selected button when disabled.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"disabledStyle")),(0,r.kt)("td",{parentName:"tr",align:null},"View Style"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Styling for each button when disabled.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"disabledTextStyle")),(0,r.kt)("td",{parentName:"tr",align:null},"Text Style"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Styling for the text of each button when disabled.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"innerBorderStyle")),(0,r.kt)("td",{parentName:"tr",align:null},"{ color?: string; width?: number; }"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Update the styling of the interior border of the list of buttons.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"onHideUnderlay")),(0,r.kt)("td",{parentName:"tr",align:null},"Function"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Function called on hiding underlay.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"onLongPress")),(0,r.kt)("td",{parentName:"tr",align:null},"GestureResponderEventHandler"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Called when a long-tap gesture is detected.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"onPress")),(0,r.kt)("td",{parentName:"tr",align:null},"(...args: any[]) => void"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Function")),(0,r.kt)("td",{parentName:"tr",align:null},"Method to update Button Group Index.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"onPressIn")),(0,r.kt)("td",{parentName:"tr",align:null},"GestureResponderEventHandler"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Called when a touch is engaged before ",(0,r.kt)("inlineCode",{parentName:"td"},"onPress"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"onPressOut")),(0,r.kt)("td",{parentName:"tr",align:null},"GestureResponderEventHandler"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Called when a touch is released before ",(0,r.kt)("inlineCode",{parentName:"td"},"onPress"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"onShowUnderlay")),(0,r.kt)("td",{parentName:"tr",align:null},"Function"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Function called on showing underlay.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"pressableProps")),(0,r.kt)("td",{parentName:"tr",align:null},"PressableProps except click handlers"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"None")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"selectMultiple")),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"Allows the user to select multiple buttons.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"selectedButtonStyle")),(0,r.kt)("td",{parentName:"tr",align:null},"View Style"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Specify styling for selected button.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"selectedIndex")),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"null")),(0,r.kt)("td",{parentName:"tr",align:null},"Current selected index of array of buttons.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"selectedIndexes")),(0,r.kt)("td",{parentName:"tr",align:null},"number[]"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[]")),(0,r.kt)("td",{parentName:"tr",align:null},"Current selected indexes from the array of buttons.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"selectedTextStyle")),(0,r.kt)("td",{parentName:"tr",align:null},"Text Style"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Specify specific styling for text in the selected state.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"setOpacityTo")),(0,r.kt)("td",{parentName:"tr",align:null},"(value: number) => void"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Function to set the opacity.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"textStyle")),(0,r.kt)("td",{parentName:"tr",align:null},"Text Style"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Specify specific styling for text.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"underlayColor")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Color [Primary]")),(0,r.kt)("td",{parentName:"tr",align:null},"Specify underlayColor for TouchableHighlight.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"vertical")),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"Display the ButtonGroup vertically."))))),(0,r.kt)("h2",{id:"playground"},"Playground"),(0,r.kt)(m.Z,{mdxType:"Play"}))}f.isMDXComponent=!0},33770:()=>{},72950:()=>{},54882:()=>{}}]);